//循环发送文件的函数
//对于服务器端:真正存着的文件的名字是他的md5码。在数据库中既存有文件名，也存有md码。而在客户端中存着的文件的名字就是他子的文件名
//因此，服务器端和客户端的发送和接受文件的函数是不一样的。

//服务器端的发送文件函数

//满足断点下载:

//1.得到客户端的下载文件请求后(客户端发送的命令是gets  filename  lseek的偏移字节)，服务器端 首先 应该去数据库查询。查询服务器 当前目录下(因为下载是在当前目录下载) 是否有属于该客户的文件(procode,filename,belong_user_name)并返回该文件的md5码,如果查询到有的话则可以为该客户提供下载服务。

//2.查询到在当前目录下有属于该客户的文件，并得到了对应的md5码后，服务器便可以开始去大目录下打开文件名为对应md5码的文件并偏移到指定位置，开始向客户端发送文件。

//3.查询到在当前目录下没有属于该客户的文件(procode,filename,belong_user_name)时，则返回给客户端，说明当前目录下没有该文件，无法下载

//4.发送文件的具体细节:如果客户端本来已经有部分该文件(断点下载)(lseek!=0则表明本地已经有该文件了),则此时没有必要重新发送文件名，直接在服务器端将文件指针偏移到对的lseek地方，开始循环发送给客户端即可。   如果客户端本来没有该文件，lseek==0，则此时得先发送文件名，并在客户端新建一个文件，之后服务器端则开始给客户端循环发送文件。  实现断点下载。


//服务器端在 当前目录 接受客户端上传的文件:

//1.首先客户端在上传文件时，是将文件的md5码先发送到服务器端，服务器端在整个数据库中查找该md5码是否存在。

//2.如果在数据库中查找到该md5码存在，则证明该文件在服务器中是存在的，则此时客户端的文件不必真正上传，只需要将对应的虚拟目录信息插入即可,procode(=code),code,filename,type,belong_user_name,md5

void transfile(int new_fd)
{
	train t;//定义火车
	t.len=strlen(FILENAME);//先发火车头
	strcpy(t.buf,FILENAME);
	send(new_fd,&t,4+t.len,0);
}
